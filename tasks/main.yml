---
- name: set default user group for SUSE
  set_fact:
    visual_studio_code_extensions_user_group_name: users
  when: "ansible_os_family == 'Suse' and visual_studio_code_extensions_user_group_name in (None, '')"

- name: set default user group for MacOSX
  set_fact:
    visual_studio_code_extensions_user_group_name: admin
  when: "ansible_distribution == 'MacOSX' and visual_studio_code_extensions_user_group_name in (None, '')"

- name: create config directories for users
  become: yes
  file:
    path: "~{{ item.0.username }}/.config"
    state: directory
    owner: "{{ item.0.username }}"
    group: "{{ (visual_studio_code_extensions_user_group_name not in (None, '')) | ternary(visual_studio_code_extensions_user_group_name, item.0.username) }}"
    mode: 'u=rwx,go=r'
  with_subelements:
    - "{{ users }}"
    - visual_studio_code_extensions
    - skip_missing: yes

- name: create Visual Studio Code directories for users
  become: yes
  file:
    path: "~{{ item.0.username }}/.config/Code/User"
    state: directory
    owner: "{{ item.0.username }}"
    group: "{{ (visual_studio_code_extensions_user_group_name not in (None, '')) | ternary(visual_studio_code_extensions_user_group_name, item.0.username) }}"
    mode: 'u=rwx,go='
  with_subelements:
    - "{{ users }}"
    - visual_studio_code_extensions
    - skip_missing: yes

- name: install extensions
  become: yes
  become_user: "{{ item.0.username }}"
  command: "code --install-extension '{{ item.1 }}'"
  with_subelements:
    - "{{ users }}"
    - visual_studio_code_extensions
    - skip_missing: yes
  register: vscode_result
  changed_when: "'already installed' not in vscode_result.stdout"

- name: uninstall extensions
  become: yes
  become_user: "{{ item.0.username }}"
  command: "code --uninstall-extension '{{ item.1 }}'"
  with_subelements:
    - "{{ users }}"
    - visual_studio_code_extensions_absent
    - skip_missing: yes
  register: vscode_uninstall_result
  failed_when: "('is not installed' not in vscode_uninstall_result.stderr) and ('successfully uninstalled' not in vscode_uninstall_result.stdout)"
  changed_when: "'successfully uninstalled' in vscode_uninstall_result.stdout"
