# code: language=ansible
---
- name: Converge
  hosts: all

  pre_tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
      changed_when: false
      when: ansible_pkg_mgr == 'apt'

    - name: Create test users
      become: true
      ansible.builtin.user:
        name: '{{ item }}'
        state: present
        home: '/home/{{ item }}'
        createhome: true
      with_items:
        - test_usr
        - test_usr2
        - test_usr3

    - name: Include package manager specific vars
      with_first_found:
        - '../../vars/pkg-mgr/{{ ansible_pkg_mgr }}.yml'
        - ../../vars/pkg-mgr/default.yml
      ansible.builtin.include_vars: '{{ item }}'

    - name: Install extension cli dependencies
      ansible.builtin.package:
        name: '{{ visual_studio_code_extensions_dependencies }}'
        state: present

    - name: Install apt key (Debian)
      ansible.builtin.apt_key:
        url: 'https://packages.microsoft.com/keys/microsoft.asc'
        state: present
      when: ansible_pkg_mgr == 'apt'

    - name: Install VS Code apt repo (Debian)
      ansible.builtin.apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
        state: present
      when: ansible_pkg_mgr == 'apt'

    - name: Install VS Code repo (yum, dnf)
      become: true
      ansible.builtin.yum_repository:
        name: code
        description: Visual Studio Code repo
        file: vscode
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc
        gpgcheck: true
      when: ansible_pkg_mgr in ('yum', 'dnf')

    - name: Install VS Code
      become: true
      ansible.builtin.package:
        name: code
        state: present
      register: vscode_install

    - name: Install VS Code Insiders (apt)
      become: true
      ansible.builtin.package:
        name: code-insiders
        state: present
      register: vscode_insiders_install
      when: "ansible_pkg_mgr == 'apt'"

    - name: Download VS Code RPM
      become: true
      ansible.builtin.get_url:
        url: 'https://update.code.visualstudio.com/latest/linux-rpm-x64/insider'
        dest: '/root/code-insiders.rpm'
        mode: 'u=rw,go='
      when: "ansible_pkg_mgr in ('yum', 'dnf')"

    - name: Install VS Code Insiders (yum)
      become: true
      ansible.builtin.yum:
        name: '/root/code-insiders.rpm'
        state: present
      when: "ansible_pkg_mgr == 'yum'"

    - name: Install VS Code Insiders (dnf)
      become: true
      ansible.builtin.dnf:
        name: '/root/code-insiders.rpm'
        state: present
      when: "ansible_pkg_mgr == 'dnf'"

    - name: Install extension cli dependencies (apt)
      become: true
      ansible.builtin.apt:
        name: libxshmfence1
        state: present
      when: ansible_pkg_mgr == 'apt'

    - name: Install extension cli dependencies (dnf)
      become: true
      ansible.builtin.dnf:
        name:
          - libX11-xcb
          - libxshmfence
        state: present
      when: ansible_pkg_mgr == 'dnf'

    - name: Install extension to be uninstalled (code)
      tags:
        # Suppress warning: [ANSIBLE0016] Tasks that run when changed should likely be handlers
        # Not applicable because this is part of the test setup not part of the role.
        - skip_ansible_lint
      become: true
      become_user: test_usr
      ansible.builtin.command: 'code --install-extension streetsidesoftware.code-spell-checker'
      changed_when: false
      when: vscode_install.changed

    - name: Install extension to be uninstalled (code-insiders)
      tags:
        # Suppress warning: [ANSIBLE0016] Tasks that run when changed should likely be handlers
        # Not applicable because this is part of the test setup not part of the role.
        - skip_ansible_lint
      become: true
      become_user: test_usr
      ansible.builtin.command: 'code-insiders --install-extension streetsidesoftware.code-spell-checker'
      changed_when: false
      when: vscode_insiders_install.changed

  roles:
    - role: ansible-role-visual-studio-code-extensions
      users:
        - username: test_usr
          visual_studio_code_extensions:
            - EditorConfig.EditorConfig
            - wholroyd.jinja
          visual_studio_code_extensions_absent:
            - streetsidesoftware.code-spell-checker
            - doesnot.Exist
        - username: test_usr2
          visual_studio_code_extensions: []
          visual_studio_code_extensions_absent: []
        - username: test_usr3
    - role: ansible-role-visual-studio-code-extensions
      visual_studio_code_extensions_build: insiders
      users:
        - username: test_usr
          visual_studio_code_extensions:
            - EditorConfig.EditorConfig
            - wholroyd.jinja
          visual_studio_code_extensions_absent:
            - streetsidesoftware.code-spell-checker
            - doesnot.Exist
        - username: test_usr2
          visual_studio_code_extensions: []
          visual_studio_code_extensions_absent: []
        - username: test_usr3
